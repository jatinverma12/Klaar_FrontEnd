{"version":3,"sources":["Components/Loader.js","Components/Message.js","Components/Paginate.js","Screens/UserScreen.js","actions/productActions.js","Components/SearchBox.js","Components/Header.js","App.js","store.js","reducers/productReducers.js","reportWebVitals.js","index.js"],"names":["Loader","Spinner","animation","role","style","width","height","margin","display","className","Message","variant","children","Alert","defaultProps","Paginate","pages","page","keyword","history","useHistory","limit","start","Pagination","Prev","onClick","push","Array","keys","map","x","to","Item","active","Ellipsis","Next","UserScreen","match","dispatch","useDispatch","params","pageNumber","Number","bankList","useSelector","state","loading","error","banks","useState","perPage","setPerpage","pageCount","setPagecount","city","setCity","useEffect","a","type","axios","get","data","filter","bank","bank_name","toLowerCase","startsWith","district","Math","ceil","length","offset","finalData","slice","payload","listBanks","class","flexDirection","Form","Group","as","Row","Label","column","sm","Col","Control","name","onChange","e","target","value","Dropdown","Toggle","id","Menu","c","index","Table","striped","bordered","hover","bank_id","ifsc","SearchBox","setKeyword","trim","inline","placeholder","Header","Navbar","bg","expand","collapseOnSelect","Container","Brand","aria-controls","Collapse","render","Nav","App","path","exact","component","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9fde0a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst Paginate = ({ pages, page, keyword }) => {\r\n  const history = useHistory()\r\n  let limit = pages < 3 ? 2 : pages < 4 ? 3 : pages < 5 ? 4 : 5\r\n  let start = page > limit ? page - 1 : 1\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        <Pagination.Prev\r\n          onClick={() => {\r\n            {\r\n              keyword\r\n                ? page !== 1 &&\r\n                  history.push(`/search/${keyword}/page/${page - 1}`)\r\n                : page !== 1 && history.push(`/page/${page - 1}`)\r\n            }\r\n          }}\r\n        />\r\n        {[...Array(limit).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + start}\r\n            to={\r\n              keyword\r\n                ? `/search/${keyword}/page/${x + start}`\r\n                : `/page/${x + start}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + start === page}>\r\n              {x + start}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n        <Pagination.Ellipsis />\r\n        <Pagination.Item\r\n          onClick={() => {\r\n            {\r\n              keyword\r\n                ? history.push(`/search/${keyword}/page/${pages}`)\r\n                : history.push(`/page/${pages}`)\r\n            }\r\n          }}\r\n        >\r\n          {pages}\r\n        </Pagination.Item>\r\n\r\n        <Pagination.Next\r\n          onClick={() => {\r\n            {\r\n              keyword\r\n                ? page !== pages &&\r\n                  history.push(`/search/${keyword}/page/${page + 1}`)\r\n                : page !== pages && history.push(`/page/${page + 1}`)\r\n            }\r\n          }}\r\n        />\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Table, Form, Col, Dropdown } from 'react-bootstrap'\r\nimport { listBanks } from '../actions/productActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\nimport Paginate from '../Components/Paginate'\r\n\r\nconst UserScreen = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const keyword = match.params.keyword\r\n  const pageNumber = Number(match.params.pageNumber) || 1\r\n\r\n  const bankList = useSelector((state) => state.bankList)\r\n  const { loading, error, banks } = bankList\r\n\r\n  const [perPage, setPerpage] = useState(10)\r\n  const [pageCount, setPagecount] = useState(0)\r\n  const [city, setCity] = useState('MUMBAI')\r\n\r\n  const cities = ['MUMBAI', 'NEW DELHI', 'PUNE', 'NOIDA', 'MURADNAGAR']\r\n  useEffect(() => {\r\n    dispatch(listBanks(keyword, pageNumber, perPage, setPagecount, city))\r\n  }, [dispatch, keyword, pageNumber, perPage, city])\r\n\r\n  return (\r\n    <>\r\n      <h1>BANK LIST</h1>\r\n      <div class='top' style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <Form>\r\n          <Form.Group as={Row} className='mb-3'>\r\n            <Form.Label column sm='4'>\r\n              Page Size\r\n            </Form.Label>\r\n            <Col sm='4'>\r\n              <Form.Control\r\n                type='number'\r\n                name='pagesize'\r\n                onChange={(e) =>\r\n                  e.target.value > 1\r\n                    ? setPerpage(e.target.value)\r\n                    : setPerpage(1)\r\n                }\r\n                value={perPage}\r\n                className='mr-sm-2 ml-sm-5'\r\n              ></Form.Control>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant='success' id='dropdown-basic'>\r\n            CITIES\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            {cities.map((c, index) =>\r\n              c == city ? (\r\n                <Dropdown.Item active key={index}>\r\n                  {c}\r\n                </Dropdown.Item>\r\n              ) : (\r\n                <Dropdown.Item\r\n                  key={index}\r\n                  onClick={() => {\r\n                    setCity(c)\r\n                  }}\r\n                >\r\n                  {c}\r\n                </Dropdown.Item>\r\n              )\r\n            )}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <h3>Bank_Id</h3>\r\n                  </th>\r\n                  <th>\r\n                    <h3>Bank Name</h3>\r\n                  </th>\r\n                  <th>\r\n                    <h3>IFSC Code</h3>\r\n                  </th>\r\n                  <th>\r\n                    <h3>District</h3>\r\n                  </th>\r\n                  <th>\r\n                    <h3>State</h3>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {banks.map((bank, index) => (\r\n                  <tr key={index}>\r\n                    <td>{bank.bank_id}</td>\r\n                    <td>{bank.bank_name}</td>\r\n                    <td>{bank.ifsc}</td>\r\n                    <td>{bank.district}</td>\r\n                    <td>{bank.state}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n          <Paginate\r\n            pages={pageCount}\r\n            page={pageNumber}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default UserScreen\r\n","import axios from 'axios'\r\nexport const listBanks =\r\n  (keyword = '', page, perPage, setPagecount, city) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'BANK_LIST_REQUEST' })\r\n\r\n      let { data } = await axios.get(\r\n        `https://vast-shore-74260.herokuapp.com/banks?city=${city}`\r\n      )\r\n\r\n      if (keyword) {\r\n        data = data.filter((bank) => {\r\n          return (\r\n            bank.bank_name.toLowerCase().startsWith(keyword.toLowerCase()) ||\r\n            bank.district.toLowerCase().startsWith(keyword.toLowerCase()) ||\r\n            bank.state.toLowerCase().startsWith(keyword.toLowerCase())\r\n          )\r\n        })\r\n      }\r\n      setPagecount(Math.ceil(data.length / perPage))\r\n      const offset = (page - 1) * perPage\r\n      const finalData = data.slice(offset, offset + perPage)\r\n      dispatch({ type: 'BANK_LIST_SUCCESS', payload: finalData })\r\n    } catch (err) {\r\n      dispatch({ type: 'BANK_LIST_FAIL', payload: err })\r\n    }\r\n  }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form } from 'react-bootstrap'\r\nimport { listBanks } from '../actions/productActions'\r\n\r\nconst SearchBox = ({ history, match }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n  useEffect(() => {\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }, [keyword])\r\n\r\n  return (\r\n    <Form inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Banks...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>BANKS</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'></Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport UserScreen from './Screens/UserScreen'\r\nimport Header from './Components/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/' exact component={UserScreen} />\r\n          <Route path='/page/:pageNumber' component={UserScreen} exact />\r\n          <Route path='/search/:keyword' component={UserScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={UserScreen}\r\n            exact\r\n          />\r\n        </Container>\r\n      </main>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer } from './reducers/productReducers'\r\n\r\nconst reducer = combineReducers({\r\n  bankList: productListReducer,\r\n})\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","export const productListReducer = (state = { banks: [] }, action) => {\r\n  switch (action.type) {\r\n    case 'BANK_LIST_REQUEST':\r\n      return { loading: true, banks: [] }\r\n    case 'BANK_LIST_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        banks: action.payload,\r\n      }\r\n    case 'BANK_LIST_FAIL':\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}